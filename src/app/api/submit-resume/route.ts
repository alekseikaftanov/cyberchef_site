import { NextRequest, NextResponse } from 'next/server';
import nodemailer from 'nodemailer';

// –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º
const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST || 'smtp.yandex.ru',
  port: parseInt(process.env.SMTP_PORT || '587'),
  secure: process.env.SMTP_SECURE === 'true' || process.env.SMTP_PORT === '465', // true –¥–ª—è 465, false –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ—Ä—Ç–æ–≤
  auth: {
    user: process.env.SMTP_USER || 'techvillsite@automacon.ru',
    pass: process.env.SMTP_PASS || 'wybxgjtyizevnfjf',
  },
});

export async function POST(request: NextRequest) {
  try {
    // –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    console.log('SMTP_HOST:', process.env.SMTP_HOST);
    console.log('SMTP_PORT:', process.env.SMTP_PORT);
    console.log('SMTP_USER:', process.env.SMTP_USER);
    console.log('SMTP_FROM:', process.env.SMTP_FROM);
    console.log('NOTIFICATION_EMAIL:', process.env.NOTIFICATION_EMAIL);
    console.log('CC_EMAILS:', process.env.CC_EMAILS);
    console.log('---');
    
    let name: string, position: string, email: string, phone: string, comment: string, resumeFile: File | null;
    
    const contentType = request.headers.get('content-type');
    
    if (contentType?.includes('application/json')) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ JSON –¥–∞–Ω–Ω—ã—Ö
      const body = await request.json();
      name = body.name;
      position = body.position;
      email = body.email;
      phone = body.phone;
      comment = body.comment;
      resumeFile = null;
    } else {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ FormData
      const formData = await request.formData();
      name = formData.get('name') as string;
      position = formData.get('position') as string;
      email = formData.get('email') as string;
      phone = formData.get('phone') as string;
      comment = formData.get('comment') as string;
      resumeFile = formData.get('resumeFile') as File | null;
    }

    // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('üìß –ù–æ–≤–æ–µ —Ä–µ–∑—é–º–µ –ø–æ–ª—É—á–µ–Ω–æ:');
    console.log('–ò–º—è:', name);
    console.log('–ü–æ–∑–∏—Ü–∏—è:', position);
    console.log('Email:', email);
    console.log('–¢–µ–ª–µ—Ñ–æ–Ω:', phone);
    console.log('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:', comment);
    console.log('–§–∞–π–ª —Ä–µ–∑—é–º–µ:', resumeFile ? resumeFile.name : '–Ω–µ—Ç');
    console.log('---');

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!name || !position || !email || !phone || !comment) {
      return NextResponse.json(
        { error: '–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è' },
        { status: 400 }
      );
    }

    // HTML —à–∞–±–ª–æ–Ω –ø–∏—Å—å–º–∞
    const htmlContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
        <div style="text-align: center; margin-bottom: 30px; padding: 20px 0; background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); border-radius: 12px;">
          <h1 style="color: #333; margin: 0; font-size: 28px; font-weight: 600;">
            –ù–æ–≤–æ–µ —Ä–µ–∑—é–º–µ —Å —Å–∞–π—Ç–∞
          </h1>
          <h2 style="color: #6C1EFF; margin: 5px 0 0 0; font-size: 32px; font-weight: 700;">
            –¢–ï–•–í–ò–õ–õ
          </h2>
        </div>
        
        <div style="background: #f9f9f9; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <h3 style="color: #333; margin-top: 0;">üìã –î–∞–Ω–Ω—ã–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:</h3>
          
          <table style="width: 100%; border-collapse: collapse;">
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #555;">üë§ –ò–º—è:</td>
              <td style="padding: 8px 0; color: #333;">${name}</td>
            </tr>
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #555;">üíº –ü–æ–∑–∏—Ü–∏—è:</td>
              <td style="padding: 8px 0; color: #333;">${position}</td>
            </tr>
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #555;">üìß Email:</td>
              <td style="padding: 8px 0; color: #333;">
                <a href="mailto:${email}" style="color: #A5F04B;">${email}</a>
              </td>
            </tr>
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #555;">üìû –¢–µ–ª–µ—Ñ–æ–Ω:</td>
              <td style="padding: 8px 0; color: #333;">
                <a href="tel:${phone}" style="color: #A5F04B;">${phone}</a>
              </td>
            </tr>
            ${resumeFile ? `
            <tr>
              <td style="padding: 8px 0; font-weight: bold; color: #555;">üìé –§–∞–π–ª —Ä–µ–∑—é–º–µ:</td>
              <td style="padding: 8px 0; color: #333;">${resumeFile.name}</td>
            </tr>
            ` : ''}
          </table>
        </div>
        
        <div style="background: #fff; padding: 20px; border-left: 4px solid #A5F04B; margin: 20px 0;">
          <h4 style="color: #333; margin-top: 0;">üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:</h4>
          <p style="color: #555; line-height: 1.6; margin: 0;">${comment}</p>
        </div>
        
        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;">

          <p style="color: #888; font-size: 14px;">
            –†–µ–∑—é–º–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ <a href="https://techvill.ru" style="color: #A5F04B;">–¢–ï–•–í–ò–õ–õ</a>
          </p>
          <p style="color: #888; font-size: 12px;">
            –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${new Date().toLocaleString('ru-RU')}
          </p>
        </div>
      </div>
    `;

    // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∏—Å—å–º–µ
    console.log('üìß –ü–∏—Å—å–º–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞:', process.env.NOTIFICATION_EMAIL || 'techvillsite@automacon.ru');
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–¥—Ä–µ—Å–∞ –¥–ª—è –∫–æ–ø–∏–π
    const ccEmails = process.env.CC_EMAILS ? process.env.CC_EMAILS.split(',').map(email => email.trim()) : [];
    if (ccEmails.length > 0) {
      console.log('üìß –ö–æ–ø–∏–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞:', ccEmails.join(', '));
    }
    
    console.log('üìß –¢–µ–º–∞ –ø–∏—Å—å–º–∞:', `–ù–æ–≤–æ–µ —Ä–µ–∑—é–º–µ –æ—Ç ${name} (${position})`);
    console.log('üìß HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–æ—Ç–æ–≤–æ');
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –≤–ª–æ–∂–µ–Ω–∏—è
    const attachments = [];
    if (resumeFile && resumeFile.size > 0) {
      const buffer = Buffer.from(await resumeFile.arrayBuffer());
      attachments.push({
        filename: resumeFile.name,
        content: buffer
      });
      console.log('üìé –§–∞–π–ª —Ä–µ–∑—é–º–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω:', resumeFile.name);
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
    const mailOptions = {
      from: process.env.SMTP_FROM || process.env.SMTP_USER,
      to: process.env.NOTIFICATION_EMAIL,
      cc: ccEmails.length > 0 ? ccEmails : undefined, // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ø–∏–∏
      subject: `–ù–æ–≤–æ–µ —Ä–µ–∑—é–º–µ –æ—Ç ${name} (${position})`,
      html: htmlContent,
      attachments
    };

    await transporter.sendMail(mailOptions);
    console.log('üìß –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
    if (ccEmails.length > 0) {
      console.log('üìß –ö–æ–ø–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞:', ccEmails.join(', '));
    }

    return NextResponse.json({ 
      success: true, 
      message: '–†–µ–∑—é–º–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' 
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—é–º–µ:', error);
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—é–º–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' },
      { status: 500 }
    );
  }
}
